docker pattern
building microservices with...
30 Jun 2016
Tags: golang,present,docker,docker-compose,coreos,aws,ecs,ecr

jun asano
http://ntk1000.github.io/zlog
@ntk1000

* agenda
- current status
- local dev
- aws stg/prod
- todo

* current status
- using docker from local dev to stg/prod env
- docker-compose on local dev
- aws ecs/ecr on stg/prod env
- 全てがコンテナになる

* components
- nginx
- nodejs app for frontend
- golang app for backend api
- mackerel-agent (with entrykit)
- aws-auth-proxy

* components local only
- redis -> Elasticache
- mysql -> RDS
- elastic search -> Elasticsearch
- dynamodb local -> Dynamodb
- datastore系はdbaasに任せる
- dockerで頑張らない

* local dev
.image ./img/x.png 600 _

* local dev host
- docker toolbox aka boot2docker
- docker for macは試してない 落ち着いたら切り替えたい

* local dev docker orchestration
- docker-compose
- docker link
- example

* nodejs
- build遅い問題
- npm install済のイメージとapp add及び起動のみのイメージに分けた方がよさそ

* golang
- buildしたバイナリをaddして起動するだけ

* middleware
- confで設定する系(fluentd,nginxなど) 公式イメージにconf addしたものでイメージ化
- confで設定且つ中身を動的に変えたい系(mackerel-agent,nginxなど) entrykitをaddしてentrykit経由でいじる

* environment variables
- 12 factor appの教え
- 環境で変動するもの、ソース管理させないものは環境変数に封じ込める
- キー情報などはconfluence管理

* microservice
- apiたくさんある それぞれvm立てるのは現実的でない
- 自分が開発する部分以外の箇所はdocker-composeで立てておいて連携確認
- datastore(mysql, elastic search, dynamodb)もコンテナ化し、開発者間で同じデータを見る

* docker-compose
- 良い

* aws stg/prod
.image ./img/x.png 600 _

* aws ecr

* multi hosting

* service discovery

* aws ecs

* todo
- docker security (https://docs.docker.com/engine/security/security/)
