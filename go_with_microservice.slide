go with microservice
container, gateway, batch
4 Oct 2016
Tags: golang,docker,immutable infrastructure, infrastructure as a code

jun asano
http://ntk1000.github.io/zlog
@ntk1000

* about me

- intelligence seeds company
- father of 2 boyz (5歳と1歳)

about seeds company

- hito-manager
- applicant tracking system
- b2c/b2b web service

* project

from 

    legacy monolithic rails app 

to 

    "microservice"s


* why "microservice"?

😭

- 一部の機能について全体が影響を受ける
- 特定顧客専用の機能が管理上全体に適用されている
- 密結合してしまったcode

😌

- 影響局所化、個別deploy
- 機能の特性に応じた最適な技術の適用
- 機能別にscale up/down

* how to develop microservices

- メニュー毎にserviceとして分割(ユーザー、スケジュール管理、等)
- (顧客数 x メニュー)数ぶんserviceが立ち上げる構成
- container🐳化してresource節約

why golang?

- 1つのbinaryにまとめられるportablity
- Dockerfile上ではbuildしたbinaryをADDするだけ
- 起動も早く、image sizeも小さく、containerと相性良い実感💜
- (個人的には) team開発のしやすさ

* Dockerfile

    FROM gliderlabs/alpine:3.3
    RUN apk update

    ADD . /app
    WORKDIR /app

    CMD ["/app/appName"]

- base imageとしてはalpineを採用
- ADDでtest/build後のbinaryをcontainerに渡している
- CMDでbinaryを実行

* service pattern

- 各機能はserviceとして独立させたい
- 機能を使う側(主にWebUI)には各serviceの詳細は意識させたくない

backends for frontends (or api gateway)
.image ./img/bff.png 350 _

* framework

.link https://github.com/labstack/echo echo

why echo?

- 速さと軽さ
- go-kitなどmicroservice向けframeworkも検討したがしっくりこなかった

* api layer

- frontend 
ui / ui backend

- gateway
bff / apigateway

- backend
各機能毎のAPI


* architecture

.image ./img/aws.png 580 1800


* architecture

- orchestration: aws ecs
- container registry: aws ecr
- service discovery: aws elb/alb
- container hostos: coreos

* gateway...

失敗

- backend APIで更新がある度にgateway実装が必要
- gatewayがfat且つSPOF
- 開発が進んでAPIが増える毎に除々にgatewayの存在が負担に...

そもそも

- APIの追加・更新はpluggableに行えたほうがよさそう
- この部分はbuild前提なgoに向いてない？

* api gateway oss

下記のようなapi gateway toolの導入を検討中

.link https://getkong.org/ kong
.image https://camo.githubusercontent.com/97aabdfeec1d04a818e3393c3bade3f54704852f/687474703a2f2f692e696d6775722e636f6d2f346a795151415a2e706e67 130 _

.link https://tyk.io/ tyk
.image https://tyk.io/wp-content/uploads/2016/03/TYK_FullLogo_WhiteText-1.png 150 _

* summary

- 
